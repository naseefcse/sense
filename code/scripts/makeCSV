#! /bin/bash
#
#  makeCSV
#
#  Copyright 2006 Mark Lisee, Boleslaw K. Szymanski and Rensselaer Polytechnic
#  Institute. All worldwide rights reserved.  A license to use, copy, modify
#  and distribute this software for non-commercial research purposes only is
#  hereby granted, provided that this copyright notice and accompanying
#  disclaimer is not modified or removed from the software.
#
#  DISCLAIMER: The software is distributed "AS IS" without any express or
#  implied warranty, including but not limited to, any implied warranties of
#  merchantability or fitness for a particular purpose or any warranty of
#  non-infringement of any current or pending patent rights. The authors of
#  the software make no representations about the suitability of this software
#  for any particular purpose. The entire risk as to the quality and
#  performance of the software is with the user. Should the software prove
#  defective, the user assumes the cost of all necessary servicing, repair or
#  correction. In particular, neither Rensselaer Polytechnic Institute, nor
#  the authors of the software are liable for any indirect, special,
#  consequential, or incidental damages related to the software, to the maximum
#  extent the law permits.
#
# Usage: makeCSV <directory>
#
# The directory is expected to contain only the files generated by many runs
# of the simulation.
# - Search all of the files in the directory looking for oversized packets.
# - For each of the important summary lines at the end of the files:
#   - Use grep to extract these lines to a temporary file
#   - Use awk on the temporary file to convert each line to a CSV format that
#     retains only the desired information.
# - Clean up by removing the temporary files.

dir=$1
appFile=app.csv
netFile=net.csv
macFile=mac.csv
batFile=bat.csv

cd $dir

echo "Searching for oversized packets..."
grep -l Oversize *-*
if [ $? -eq 0 ]; then
    echo "Oversized packet in at least one run"
else
    echo "Everything OK"
fi

# Grep for desired string & save results in temp file
# break lines in temp file at ':', keep some fields & write to 2nd temp file
# write header to final file
# break lines in 2nd temp file at ' ', keep some fields & write to final file

grep APP * > a
awk -F: '{printf( "%s %s %s %s\n", $1, $3, $4, $6)}' a > b
echo "name, sent, received, delay" > $appFile
awk '{printf( "%s, %s %s %s\n", $1, $2, $4, $7)}' b >> $appFile

grep "NET -- pkt" * > a
awk -F: '{printf( "%s %s %s %s %s %s %s %s\n", $1, $3, $4, $5, $6, $7, $8, $9)}' a > b
echo "name, sent, received, hop count, suboptimal, can pkt, can subopt" > $netFile
awk '{printf( "%s, %s %s %s %s %s %s\n", $1, $2, $4, $7, $12, $15, $18)}' b >> $netFile

grep "MAC" * > a
awk -F: '{printf( "%s %s %s\n", $1, $3, $4)}' a > b
echo "name, sent, received, collision" > $macFile
awk '{printf( "%s, %s %s %s\n", $1, $2, $4, $7)}' b >> $macFile

grep "BAT" * > a
awk -F: '{printf( "%s %s %s\n", $1, $3, $4)}' a > b
echo "name, initial, remaining" > $batFile
awk '{printf( "%s, %s %s %s\n", $1, $2, $4, $7)}' b >> $batFile

rm a b
